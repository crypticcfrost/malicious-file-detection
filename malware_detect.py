# ml_detector.py
import sys
import json
import joblib
import pefile
import ember
import hashlib

def extract_features(filepath):
    try:
        with open(filepath, 'rb') as f:
            data = f.read()
        if data[:2] != b'MZ':
            return None  # Not a PE file
        pe = pefile.PE(data=data)
        extractor = ember.PEFeatureExtractor()
        features = extractor.process_raw(data)
        return features
    except Exception as e:
        return None

def predict(filepath):
    features = extract_features(filepath)
    if features is None:
        return {"error": "Not a valid PE file"}

    model = joblib.load("ember_model_2018.pkl")  # Pretrained Ember model
    prediction = model.predict_proba([features])[0][1]  # Probability of being malware
    return {"malware_score": float(prediction)}

if __name__ == "__main__":
    if len(sys.argv) < 2:
        print(json.dumps({"error": "Missing file path"}))
    else:
        result = predict(sys.argv[1])
        print(json.dumps(result))
